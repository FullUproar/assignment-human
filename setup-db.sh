#!/bin/bash

# Easy Supabase Setup Script
echo "==================================="
echo "Assignment Human - Database Setup"
echo "==================================="
echo ""
echo "Get these from Supabase Dashboard > Settings > API"
echo ""

# Get URL
echo "Step 1: Enter your Supabase Project URL"
echo "Example: https://abcdefghijkl.supabase.co"
read -p "URL: " SUPABASE_URL

# Get Key
echo ""
echo "Step 2: Enter your Supabase anon/public key"
echo "(It's the long one starting with eyJ...)"
read -p "Key: " SUPABASE_KEY

# Write config
cat > config.js << EOF
// Supabase Configuration
// Auto-generated by setup script

window.SUPABASE_CONFIG = {
    url: '$SUPABASE_URL',
    anonKey: '$SUPABASE_KEY'
};
EOF

echo ""
echo "✅ Config file created!"
echo ""
echo "Testing connection..."

# Update the supabase.js to use the config
cat > lib/supabase.js << 'EOF'
// Supabase Client Configuration
class SupabaseClient {
    constructor() {
        this.supabaseUrl = null;
        this.supabaseAnonKey = null;
        this.client = null;
    }

    async init() {
        try {
            // Load config from config.js
            if (window.SUPABASE_CONFIG) {
                this.supabaseUrl = window.SUPABASE_CONFIG.url;
                this.supabaseAnonKey = window.SUPABASE_CONFIG.anonKey;
                
                // Initialize Supabase client
                if (window.supabase) {
                    this.client = window.supabase.createClient(
                        this.supabaseUrl, 
                        this.supabaseAnonKey
                    );
                    console.log('✅ Supabase connected!');
                    return true;
                }
            }
        } catch (error) {
            console.error('Failed to initialize Supabase:', error);
            return false;
        }
    }
}

window.AssignmentHumanDB = new SupabaseClient();
EOF

echo "✅ Database client updated!"
echo ""
echo "Now run: git add . && git commit -m 'Add database config' && git push"